{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/chat-stream/chat-stream.component.css","webpack:///./src/app/components/chat-stream/chat-stream.component.html","webpack:///./src/app/components/chat-stream/chat-stream.component.ts","webpack:///./src/app/components/lobby/lobby.component.css","webpack:///./src/app/components/lobby/lobby.component.html","webpack:///./src/app/components/lobby/lobby.component.ts","webpack:///./src/app/components/room/room.component.css","webpack:///./src/app/components/room/room.component.html","webpack:///./src/app/components/room/room.component.ts","webpack:///./src/app/components/sign-in/sign-in.component.css","webpack:///./src/app/components/sign-in/sign-in.component.html","webpack:///./src/app/components/sign-in/sign-in.component.ts","webpack:///./src/app/services/authorize-guard.service.ts","webpack:///./src/app/services/hub-builder.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <nav class=\\\"navbar navbar-light bg-light\\\">\\r\\n    <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">ChattR!</a>\\r\\n    <ul *ngIf=\\\"user != null\\\" class=\\\"nav justify-content-end\\\">\\r\\n      <li class=\\\"nav-item\\\" ngbDropdown>\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" routerLink ngbDropdownToggle>Hello, {{user.name}}!</a>\\r\\n        <div class=\\\"dropdown-menu\\\" ngbDropdownMenu>\\r\\n          <a (click)=\\\"logout()\\\" class=\\\"btn btn-default w-100\\\">Logout</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { UserService } from './services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from './models';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  dropdownVisible = false;\r\n  signingOut = false;\r\n  user: User;\r\n  constructor(public userService: UserService) {\r\n    userService.user$.subscribe(u => this.user = u);\r\n  }\r\n  logout() {\r\n    this.signingOut = true;\r\n    const req = this.userService.signOut();\r\n    req.subscribe(() => {\r\n      this.signingOut = false;\r\n    });\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppComponent } from './app.component';\r\nimport { LobbyComponent } from './components/lobby/lobby.component';\r\nimport { RoomComponent } from './components/room/room.component';\r\nimport { SignInComponent } from './components/sign-in/sign-in.component';\r\nimport { AuthorizeGuardService } from './services/authorize-guard.service';\r\nimport { ChatStreamComponent } from './components/chat-stream/chat-stream.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LobbyComponent,\r\n    RoomComponent,\r\n    SignInComponent,\r\n    ChatStreamComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      {\r\n        path: \"\", canActivate: [AuthorizeGuardService], children: [\r\n          { path: \"\", pathMatch: \"full\", component: LobbyComponent },\r\n          { path: \"room/:id\", component: RoomComponent }\r\n        ]\r\n      },\r\n      { path: \"signin\", component: SignInComponent }\r\n    ]),\r\n    BrowserModule,\r\n    NgbModule.forRoot(),\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"messages != null; else loadingMessage\\\" class=\\\"message-stream\\\">\\r\\n  <div *ngFor=\\\"let message of messages\\\" class=\\\"message {{isOwnMessage(message) ? 'recieved text-right' : 'sent'}}\\\">\\r\\n    <div class=\\\"message-sender font-weight-light text-secondary\\\" *ngIf=\\\"!isOwnMessage(message)\\\">\\r\\n      {{message.senderName}}\\r\\n    </div>\\r\\n    <div class=\\\"h4\\\">\\r\\n      <span class=\\\"rounded px-3 {{isOwnMessage(message) ? 'text-info bg-dark' : 'text-primary bg-light'}}\\\">\\r\\n        {{message.text}}\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"message-sent-date font-weight-light text-muted\\\">\\r\\n      {{message.postedDate | date: 'MMM dd HH:mm'}}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #loadingMessage>\\r\\n  <h2 class=\\\"text-center\\\">[ l o a d i n g . . . ]</h2>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Message } from '../../models';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-stream',\r\n  templateUrl: './chat-stream.component.html',\r\n  styleUrls: ['./chat-stream.component.css']\r\n})\r\nexport class ChatStreamComponent {\r\n  @Input() messages: Message[];\r\n  constructor(private userService: UserService) { }\r\n\r\n  isOwnMessage(message: Message) {\r\n    return message.senderId === (this.userService.user && this.userService.user.id);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8\\\" style=\\\"height: calc(100vh - 72px); overflow-y: auto\\\">\\r\\n    <form class=\\\"form-group row\\\" (ngSubmit)=\\\"sendMessage()\\\" #sendMessageForm=\\\"ngForm\\\">\\r\\n      <input required class=\\\"form-control col-8\\\" [(ngModel)]=\\\"chatMessage\\\" name=\\\"chatMessage\\\" autocomplete=\\\"off\\\" />\\r\\n      <button [disabled]=\\\"!sendMessageForm.valid\\\" class=\\\"btn btn-primary col-4\\\" type=\\\"submit\\\">Send</button>\\r\\n    </form>\\r\\n    <app-chat-stream [messages]=\\\"lobbyMessages\\\"></app-chat-stream>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row no-gutters\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <a class=\\\"btn btn-primary w-100 rounded-0\\\" [class.active]=\\\"activeTab === 'peeps'\\\" (click)=\\\"activeTab='peeps'\\\">Peeps ({{peeps === undefined ? '...' : peeps.length}})</a>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <a class=\\\"btn btn-primary w-100 rounded-0\\\" [class.active]=\\\"activeTab === 'rooms'\\\" (click)=\\\"activeTab='rooms'\\\">Rooms ({{rooms === undefined ? '...' : rooms.length}})</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <ul class=\\\"list-group list-group-flush\\\">\\r\\n            <ng-container *ngIf=\\\"activeTab === 'peeps'\\\">\\r\\n              <li *ngFor=\\\"let person of peeps\\\" class=\\\"list-group-item\\\">{{person.username}}</li>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"activeTab === 'rooms'\\\">\\r\\n              <li *ngFor=\\\"let room of rooms\\\" class=\\\"list-group-item\\\">{{room.name}}</li>\\r\\n            </ng-container>\\r\\n          </ul>\\r\\n          <div *ngIf=\\\"activeTab === 'rooms'\\\">\\r\\n            <hr />\\r\\n            <form class=\\\"text-center\\\" #newRoomForm=\\\"ngForm\\\" (ngSubmit)=\\\"createRoom()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"newRoomName\\\">Create your own room!</label>\\r\\n                <input required class=\\\"form-control\\\" placeholder=\\\"Give a fancy name for the room...\\\" [(ngModel)]=\\\"newRoomName\\\" name=\\\"newRoomName\\\" id=\\\"newRoomName\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group form-check\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [(ngModel)]=\\\"newRoomIsPrivate\\\" name=\\\"newRoomIsPrivate\\\" id=\\\"newRoomIsPrivate\\\" />\\r\\n                <label for=\\\"newRoomIsPrivate\\\">...but is it <i>private</i>?</label>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"newRoomIsPrivate\\\" class=\\\"form-group\\\">\\r\\n                <label for=\\\"newRoomPasskey\\\">Provide the secret passkey, then!</label>\\r\\n                <input required class=\\\"form-control\\\" placeholder=\\\"Only who know the secret can enter...\\\" [(ngModel)]=\\\"newRoomPasskey\\\" name=\\\"newRoomPasskey\\\" id=\\\"newRoomPasskey\\\" />\\r\\n              </div>\\r\\n              <button type=\\\"submit\\\" [disabled]=\\\"!newRoomForm.valid\\\" class=\\\"btn btn-success w-100 m-1\\\">Create it!</button>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Room, User, Message } from '../../models';\r\nimport * as signalR from '@aspnet/signalr';\r\nimport { HubBuilderService } from '../../services/hub-builder.service';\r\n\r\n@Component({\r\n  selector: 'app-lobby',\r\n  templateUrl: './lobby.component.html',\r\n  styleUrls: ['./lobby.component.css']\r\n})\r\nexport class LobbyComponent implements OnInit, OnDestroy {\r\n  activeTab: 'rooms' | 'peeps' = 'peeps';\r\n\r\n  rooms: Room[];\r\n  peeps: User[];\r\n\r\n  newRoomName: string;\r\n  newRoomIsPrivate: boolean = false;\r\n  newRoomPasskey: string;\r\n\r\n  lobbyMessages: Message[];\r\n  lobbyLoading: boolean = false;\r\n\r\n  chatMessage: string;\r\n\r\n  connection: signalR.HubConnection;\r\n\r\n  constructor(hubBuilder: HubBuilderService) {\r\n    this.connection = hubBuilder.getConnection();\r\n    this.connection.on(\"SetUsers\", users => this.setUsers(users));\r\n    this.connection.on(\"UserEntered\", user => this.userEntered(user));\r\n    this.connection.on(\"UserLeft\", userId => this.userLeft(userId));\r\n    this.connection.on(\"SetMessages\", messages => this.setMessages(messages));\r\n    this.connection.on(\"RecieveMessage\", message => this.recieveMessage(message));\r\n    this.connection.on(\"SendMessages\", _ => this.sendMessage());\r\n    this.connection.on(\"CreateRoom\", room => this.createRoom(room));\r\n\r\n    this.peeps = [];\r\n    this.lobbyMessages = [];\r\n    this.rooms = [];\r\n    this.connection.start().then(() => {\r\n      this.connection.invoke(\"EnterLobby\");\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // When the component is destroyed (e.g. in the case of navigation), close the connection.\r\n    // Do not forget to unsubscribe the event handler, otherwise we will have memory leak!\r\n    this.connection.off(\"SetUsers\");\r\n    this.connection.off(\"UserEntered\");\r\n    this.connection.off(\"UserLeft\");\r\n    this.connection.off(\"SetMessages\");\r\n    this.connection.off(\"RecieveMessage\");\r\n    this.connection.off(\"SendMessages\");\r\n    this.connection.off(\"CreateRoom\");\r\n    this.connection.stop(); // The stop() function is actually asynchronous, it returns a Promise.\r\n  }\r\n\r\n  recieveMessage(message: Message) {\r\n    this.lobbyMessages.splice(0, 0, message);\r\n  }\r\n\r\n  userEntered(user: User) {\r\n    this.peeps.push(user);\r\n  }\r\n\r\n  userLeft(userId: string) {\r\n    this.peeps.forEach((user, index) => {\r\n      if (user.id == userId) this.peeps.splice(index, 1);\r\n    });\r\n  }\r\n\r\n  setUsers(users: User[]) {\r\n    this.peeps = users;\r\n  }\r\n\r\n  setMessages(messages: Message[]) {\r\n    this.lobbyMessages = messages;\r\n  }\r\n\r\n  sendMessage() {\r\n    // We can send message to the server with the call of invoke function.\r\n    this.connection.invoke(\"SendMessageToLobby\", this.chatMessage);\r\n    // Also, the request is a Promise, so event handlers could subscribe for it, which is fired when\r\n    // the server confirmed the request (or an error was occured). The methods of the server can\r\n    // return Task<T> instead of Task, in this case we get the answer object itself in the event ekkor\r\n    // handler of the answer:\r\n    // this.connection.invoke(\"SendMessageToLobby\", this.chatMessage)\r\n    // .then((t: T) => {\r\n    // console.log(t);\r\n    // })\r\n    // .catch(console.error);\r\n    this.chatMessage = \"\";\r\n  }\r\n\r\n  createRoom(room: Room) {\r\n    // TODO: szoba létrehozása szerveren, majd navigáció a szoba útvonalára, szükség esetén megadni a passkey-t\r\n    this.connection.invoke(\"CreateRoom\", this.newRoomName);\r\n    this.rooms.push(room);\r\n\r\n    this.newRoomName = \"\";\r\n  }\r\n\r\n  roomCreated(room: Room) {\r\n    // TODO: szobalista frissítése\r\n  }\r\n\r\n  roomAbandoned(roomName: string) {\r\n    // TODO: szobalista frissítése\r\n  }\r\n\r\n  enterRoom(room: Room) {\r\n    // TODO: navigáció a szoba útvonlára, figyelve, hogy kell-e megadni passkey-t\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  room works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\r\n\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css']\n})\nexport class RoomComponent implements OnInit {\n  id: string;\n  constructor(private route: ActivatedRoute) {\n    route.params.subscribe(p => {\n      this.id = p[\"id\"];\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row justify-content-center\\\">\\r\\n  <form (ngSubmit)=\\\"signin()\\\" #form=\\\"ngForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"username\\\">Username</label>\\r\\n      <input class=\\\"form-control\\\" autocomplete=\\\"off\\\" name=\\\"username\\\" id=\\\"username\\\" [(ngModel)]=\\\"username\\\" required />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"password\\\">Password</label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"password\\\" required #passwordModel=\\\"ngModel\\\" />\\r\\n    </div>\\r\\n\\r\\n    <button [disabled]=\\\"loading || !form.valid\\\" class=\\\"w-100 btn btn-primary\\\" type=\\\"submit\\\">Sign {{signUpVisible ? \\\"up\\\" : \\\"in\\\"}} to ChattR</button>\\r\\n\\r\\n    <ng-container *ngIf=\\\"signUpVisible;else:signUp\\\">\\r\\n      <button [disabled]=\\\"loading\\\" type=\\\"button\\\" class=\\\"w-100 my-2 btn btn-light\\\" (click)=\\\"signUpVisible = false; errors = null\\\">Have an account? Sign in here!</button>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!signUpVisible\\\" #signUp>\\r\\n      <button [disabled]=\\\"loading\\\" type=\\\"button\\\" class=\\\"w-100 my-2 btn btn-light\\\" (click)=\\\"signUpVisible = true; errors = null\\\">No account? Sign up here!</button>\\r\\n    </ng-container>\\r\\n\\r\\n    <div *ngIf=\\\"errors\\\" class=\\\"text-center\\\">\\r\\n      Sorry, an error occured. Please, try again.\\r\\n      <div class=\\\"text-danger\\\" *ngFor=\\\"let error of errors\\\">\\r\\n        {{error}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent {\r\n  signUpVisible = false;\r\n\r\n  constructor(private userService: UserService) { }\r\n  username: string;\r\n  password: string;\r\n  passwordAgain: string;\r\n\r\n  loading = false;\r\n  errors: string[] = undefined;\r\n\r\n  signin() {\r\n    const call = this.signUpVisible ? this.userService.signUp : this.userService.signIn;\r\n    this.loading = true;\r\n    this.errors = undefined;\r\n    call.bind(this.userService)(this.username, this.password).subscribe(() => {\r\n      this.loading = false;\r\n    }, (error: (HttpResponse<any> & { error: any })) => {\r\n      this.loading = false;\r\n      if (error.error instanceof Array) {\r\n        this.errors = error.error;\r\n      } else this.errors = [error.statusText];\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { UserService } from './user.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizeGuardService implements CanActivate {\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  canActivate() {\r\n    if (this.userService.user)\r\n      return true;\r\n    return this.userService.user$.pipe(map(user => {\r\n      if (!user) {\r\n        this.router.navigate([\"/signin\"]);\r\n      }\r\n      return !!user;\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as signalR from '@aspnet/signalr'; // We store all symbols (classes, constants, etc)\n// exported from the package in the signalR object.\n@Injectable({\n  providedIn: 'root'\n})\nexport class HubBuilderService {\n  getConnection() {\n    return new signalR.HubConnectionBuilder()\n      .withUrl(\"/chattrhub\")\n      .configureLogging(signalR.LogLevel.Information)\n      .build();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { share } from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  public get user$() { return this._user$; }\r\n  private _user$: Observable<User>;\r\n  public get user() { return this._user; }\r\n  private _user: User;\r\n  private userSubject$: ReplaySubject<User>;\r\n  private gettingUser = false;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.userSubject$ = new ReplaySubject(1);\r\n    this.userSubject$.subscribe(u => this._user = u);\r\n    this._user$ = this.userSubject$.asObservable().pipe(share());\r\n    this.tryGetUser();\r\n  }\r\n\r\n  tryGetUser() {\r\n    if (!this._user && !this.gettingUser) {\r\n      this.gettingUser = true;\r\n      this.http.get<User>(\"/api/user\").subscribe(user => {\r\n        this.gettingUser = false;\r\n        this.userSubject$.next(user);\r\n        this.onSignedIn(user);\r\n      }, err => {\r\n        console.error(err);\r\n        this.gettingUser = false;\r\n        this.userSubject$.next(undefined);\r\n      });\r\n    }\r\n    return this._user$;\r\n  }\r\n\r\n  onSignedIn(user: User) {\r\n    this.userSubject$.next(user);\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  signIn(userName: string, password: string) {\r\n    const req = this.http.post<User>(\"/api/user/signin\", { userName, password }, { observe: \"response\" }).pipe(share());\r\n    req.subscribe(user => {\r\n      this.onSignedIn(user.body);\r\n    }, console.error);\r\n    return req;\r\n  }\r\n\r\n  signOut() {\r\n    const req = this.http.post(\"api/user/signout\", {}).pipe(share());\r\n    req.subscribe(() => {\r\n      this.userSubject$.next(undefined);\r\n      this.router.navigate([\"/signin\"]);\r\n    }, console.error);\r\n    return req;\r\n  }\r\n\r\n  signUp(userName: string, password: string) {\r\n    const req = this.http.post<User>(\"/api/user/signup\", { userName, password }, { observe: \"response\" }).pipe(share());\r\n    req.subscribe(user => {\r\n      this.onSignedIn(user.body);\r\n    }, console.error);\r\n    return req;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}